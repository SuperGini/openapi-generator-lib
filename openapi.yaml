openapi: 3.0.0
info:
  title: Test POC for Modulith
  description: |-
    POC test to see how to build a modulith app
  contact:
    email: tes@email.com
  version: 1.0.0
servers:
  - url: https://localhost:8080/POC
tags:
  - name: CAR
    description: car API used to store ino about cars
  - name: CUSTOMER
    description: customer API used to store customers
  - name: STORE
    description: store API used to store parts
  - name: ORDER
    description: order API used to generate orders


paths:
  /v1/car:
    post:
      tags:
        - CAR
      summary: Adds information about a car to database
      description: Using this endpoint will create a new car object
      operationId: createCar
      requestBody:
        description: Contains information about the car
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CarRequest"
        required: true
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Bad request"
                status: 400
                detail: "Error on field"
                instance: "/pet"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Unauthorized"
                status: 400
                detail: "You are not authorized to access this endpoint"
                instance: "/pet"
        '404':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Not Found"
                status: 404
                detail: "Car model not found"
                instance: "/v1/car"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/car"
  /v1/car/constructor:
    post:
      tags:
        - CAR
      summary: Adds information about a car model to database
      description: Using this endpoint will create a new car model object
      operationId: createConstructor
      requestBody:
        description: Contains information about the car model
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConstructorRequest"
        required: true
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Bad request"
                status: 400
                detail: "Cal model already exists"
                instance: "/v1/car/model"
  /v1/customer:
    post:
      tags:
        - CUSTOMER
      summary: Create a customer
      description: Use this endpoint to save a customer to database
      operationId: createCustomer
      requestBody:
        description: containes customer info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '201':
          description: 'Successful operation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/customer"
  /v1/store/part:
    post:
      tags:
        - STORE
      summary: Create a part in the store
      description: Use this endpoint to save a part to database
      operationId: createPart
      requestBody:
        description: containes part info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartRequest'
      responses:
        '201':
          description: 'Successful operation'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/store/part"
    patch:
      tags:
        - STORE
      summary: Updates the part quantity
      description: Use this endpoint to update the part quantity
      operationId: updatePartQuantity
      requestBody:
        description: contain the parts quantity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartUpdateRequest'
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartUpdateResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/store/part"
  /v1/store/part/{partNumber}:
    get:
      tags:
        - STORE
      summary: Get part info by partNumber
      description: retrieve information about a part
      operationId: getPart
      parameters:
        - name: partNumber
          in: path
          description: the unique part number of the part
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PartResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/store/part"
  /v1/order:
    post:
      tags:
        - ORDER
      summary: Create an order
      description: Use this endpoint to create an order
      operationId: createOrder
      requestBody:
        description: contains information about the customer and parts
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/store/part"
  /v1/order/{customerId}:
    get:
      tags:
        - ORDER
      summary: Get all orders for a customer
      description: retrieve information about a customer orders
      operationId: getAllOrders
      parameters:
        - name: customerId
          in: path
          description: the unique id identifier of a customer
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GetOrderResponse"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "Internal server Error"
                status: 400
                detail: "Internal server error"
                instance: "/v1/store/part"

components:
  schemas:
    CarRequest:
      required:
        - vin
        - name
        - constructor
      type: object
      properties:
        vin:
          type: string
          pattern: "^[0-9A-Za-z]{17}$"
          example: WF0FG56DF5687W567
          description: Max of 17 alfa-numeric character
        name:
          type: string
          example: Focus
          description: name of the car model
        constructor:
          $ref: "#/components/schemas/ConstructorRequest"
    ConstructorRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          pattern: '^[^<>()]{0,60}$'
          example: Ford
          description: Do not allow <> or () and the string can have a maximum of 60 characters represents the constructor of the car
    CustomerRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: John
          description: represents the name of the customer
    PartRequest:
      required:
        - name
        - partNumber
        - quantity
      type: object
      properties:
        name:
          type: string
          example: front fender
          description: the name of the part
        partNumber:
          type: string
          example: '15-75-GF'
          description: identification number of the part. This is unique for every part
        quantity:
          type: integer
          format: int32
          example: 10
          default: 0
    PartUpdateRequest:
      required:
        - partNumber
        - quantity
      type: object
      properties:
        partNumber:
          type: string
          description: identification number of the part. This is unique for every part
          example: '15-75-GF'
        quantity:
          type: integer
          format: int32
          description: represents how many parts will be added to the store
          example: 2
    PartUpdateResponse:
      required:
        - quantity
        - partNumber
        - name
      type: object
      properties:
        quantity:
          type: string
          description: represents the number of parts in the store
          example: 12
        partNumber:
          type: string
          description: represents the unique identifier of the part
          example: '15-75-GF'
        name:
          type: string
          description: represents the name of the part
          example: front fender
    GetOrderResponse:
      required:
        - number
        - parts
        - customerName
        - vin
        - date
      properties:
        number:
          type: number
          format: int64
          description: represents the order number
          example: 123
        customerName:
          type: string
          description: name of the customer
          example: John
        vin:
          type: string
          description: serial number of the car
          example: WF0FG56DF5687W567
        date:
          type: string
          format: date-time
          description: date-time format as ISO8601 and defined in RFC 3339
        parts:
          type: array
          items:
            $ref: "#/components/schemas/GetOrderPartResponse"
    PartResponse:
      required:
        - quantity
        - partNumber
        - name
      type: object
      properties:
        quantity:
          type: string
          description: represents the number of parts in the store
          example: 12
        partNumber:
          type: string
          description: represents the unique identifier of the part
          example: '15-75-GF'
        name:
          type: string
          description: represents the name of the part
          example: front fender
    OrderRequest:
      required:
        - parts
        - customerId
        - vin
      properties:
        parts:
          type: array
          items:
            $ref: "#/components/schemas/OrderPartRequest"
        customerId:
          type: integer
          format: int64
          description: unique identifier for the customer
          example: 1234
        vin:
          type: string
          pattern: "^[0-9A-Za-z]{17}$"
          description: serial number of the car
          example: WF0FG56DF5687W567
    OrderPartRequest:
      required:
        - partNumber
        - quantity
      properties:
        partNumber:
          type: string
          description:  unique identifier of the part
          example: '15-75-GF'
        quantity:
          type: integer
          format: int32
          description: how many items does the customer want to buy
          example: 5
    OrderResponse:
      required:
        - number
        - parts
        - customerName
        - vin
      properties:
        number:
          type: number
          format: int64
          description: represents the order number
          example: 123
        customerName:
          type: string
          description: name of the customer
          example: John
        vin:
          type: string
          description: serial number of the car
          example: WF0FG56DF5687W567
        parts:
          type: array
          items:
            $ref: "#/components/schemas/OrderPartResponse"
    OrderPartResponse:
      required:
        - partNumber
        - quantity
      properties:
        partNumber:
          type: string
          description: unique identifier of the part
          example: '15-75-GF'
        quantity:
          type: integer
          format: int32
          description: how many items does the customer want to buy
          example: 5
    GetOrderPartResponse:
      required:
        - partNumber
        - quantity
      properties:
        partNumber:
          type: string
          description: unique identifier of the part
          example: '15-75-GF'
        quantity:
          type: integer
          format: int32
          description: how many items does the customer want to buy
          example: 5
    Error:
      type: object
      required:
        - status
        - title
      properties:
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string