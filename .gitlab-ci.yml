image: openjdk:21-slim-bookworm

#https://www.youtube.com/watch?v=Yn0N8_Gfcyw ->HOW TO PUBLISH NPM PACKAGES
#before_script:
##  - apk add --no-cache yq  # For Alpine-based images
#  # or
#  - apt-get update && apt-get install -y yq # For Debian/Ubuntu-based images

variables:
  gitlab_deploy_token: "default"
  openApiFileName: "default"

before_script:
  # 1. Update apt package lists
  - apt-get update -y
  # 2. Install 'wget' which is needed to download the yq binary
  - apt-get install -y wget
  # 3. DOWNLOAD AND INSTALL THE CORRECT (GO) YQ VERSION
  #    We are downloading it directly from Mike Farah's GitHub releases.
  - wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/local/bin/yq
  # 4. Make the downloaded yq binary executable
  - chmod +x /usr/local/bin/yq
  # 5. (Optional but recommended) Verify yq installation and version
  - echo "Verifying yq version:"
  - yq --version # This should show something like "yq (https://github.com/mikefarah/yq/) version 4.40.5"

stages:
  - generate-job
  - publish-job

workflow:
  rules:
    # Allow manual pipeline runs via the GitLab UI.
    # This is where you provide your "keyboard input" via the form.
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always

generate-java-typescript-files-stage:
  stage: generate-job
  script:
    - chmod +x ./gradlew
    - ./gradlew javaSpring typescriptAngular -PopenApiFileName="$openApiFileName"
  artifacts:
    paths:
      - javagenerated/
      - "${openApiFileName}/"
    expire_in: 1 hour
#
publish-java-library-stage:
  stage: publish-job
  script:
    - chmod +x ./gradlew
    - FULL_OPENAPI_FILE_PATH="./openapi/${openApiFileName}.yaml"
    - version=$(yq e '.info.version' "$FULL_OPENAPI_FILE_PATH")                  # Extract version from OpenAPI YAML file
    - sed -i "s/version = \".*\"/version = \"$version\"/" build.gradle.kts       # Replace version in build.gradle.kts
    - ./gradlew publish -Pgitlab_deploy_token="${gitlab_deploy_token}" -PopenApiFileName="${openApiFileName}"

publish-typescript-library-stage:
  stage: publish-job
  image: node:latest
  script:
    - |
      cd "./${openApiFileName}"
      # --- 1. Install Angular library dependencies ---
      echo "Installing Angular library dependencies..."
      npm install
      # --- 2. Build the Angular library using ng-packagr ---
      echo "Building Angular library with ng-packagr..."
      npm run build
      # --- 3. Configure .npmrc for publishing to GitLab Package Registry ---
      echo "Configuring .npmrc for publishing to GitLab Package Registry..."
      echo "@openapi-generator:registry=https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
      echo "//gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${gitlab_deploy_token}" >> .npmrc
      echo "--- Contents of .npmrc ---"
      cat .npmrc
      echo "--------------------------"
      # --- 4. Publish the library from the current directory, specifying 'dist/' ---
      echo "Publishing TypeScript library from current directory, specifying 'dist/'..."
      npm publish "./dist"
      echo "--- TypeScript Library Publish Stage Finished ---"