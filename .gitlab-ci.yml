image: openjdk:21-slim-bookworm

#before_script:
##  - apk add --no-cache yq  # For Alpine-based images
#  # or
#  - apt-get update && apt-get install -y yq # For Debian/Ubuntu-based images


before_script:
  # 1. Update apt package lists
  - apt-get update -y
  # 2. Install 'wget' which is needed to download the yq binary
  - apt-get install -y wget
  # 3. DOWNLOAD AND INSTALL THE CORRECT (GO) YQ VERSION
  #    This step is crucial to avoid the Python yq that causes your error.
  #    We are downloading it directly from Mike Farah's GitHub releases.
  - wget https://github.com/mikefarah/yq/releases/download/v4.40.5/yq_linux_amd64 -O /usr/local/bin/yq
  # 4. Make the downloaded yq binary executable
  - chmod +x /usr/local/bin/yq
  # 5. (Optional but recommended) Verify yq installation and version
  - echo "Verifying yq version:"
  - yq --version # This should show something like "yq (https://github.com/mikefarah/yq/) version 4.40.5"

stages:
  - build
  - publish

workflow:
  rules:
    # Allow manual pipeline runs via the GitLab UI.
    # This is where you provide your "keyboard input" via the form.
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always

#build-stage:
#  stage: build
#  variables:
#    openApiFileName:
#      value: "default-value"
#  script:
#    - chmod +x ./gradlew
#    - ./gradlew compileJava -PopenApiFileName="$openApiFileName"

publish-stage:
  stage: publish
  variables:
    ci_JOB_TOKEN_OPEN_API:
      value: default-value
    openApiFileName:
      value: "default-value"
  script:
    - chmod +x ./gradlew
    # Extract version from OpenAPI YAML file
    - version=$(yq e '.info.version' "$openApiFileName".yaml)
    # Replace version in build.gradle.kts
    - sed -i "s/version = \".*\"/version = \"$version\"/" build.gradle.kts
    - echo "Updated build.gradle.kts with version: $version"
    - ./gradlew publish -Pci_JOB_TOKEN_OPEN_API="$ci_JOB_TOKEN_OPEN_API" -PopenApiFileName="$openApiFileName"

